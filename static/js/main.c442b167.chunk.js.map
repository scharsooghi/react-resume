{"version":3,"sources":["components/Navbar.js","components/Fullpage.js","components/DownIcon.js","sections/TitleSection.js","sections/AboutSection.js","components/SkillCard.js","components/UpIcon.js","sections/SkillSection.js","components/ChangeColor.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","style","color","this","props","onClick","changeColor","data","icons","img","fontSize","activeClass","to","spy","smooth","offset","duration","Component","Fullpage","children","background","DownIcon","TitleSection","name","src","alt","title","subtitle","Object","keys","links","map","key","url","target","bgColor","AboutSection","sections","items","p","content","console","log","SkillCard","skill","image","UpIcon","SkillSection","eachSkill","ChangeColor","chColor","colors","setState","Math","floor","random","length","state","animationInterval","snowCharacter","vMaxY","vMaxX","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c442b167.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from 'react-scroll';\r\nimport data from \"../data.json\";\r\nimport \"./Navbar.css\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"navbar\" style={{ color: this.props.color }}>\r\n        <div className=\"leftNav\" onClick={this.props.changeColor}>\r\n          <i className={data.icons[1].img} style={{ fontSize: 25 }}></i>\r\n        </div>\r\n        <div className=\"rightNav\">\r\n          <Link activeClass=\"active\" to=\"about\" spy={true} smooth={true} offset={50} duration={500}>\r\n            <div>\r\n              About\r\n            </div>\r\n          </Link>\r\n          <Link activeClass=\"active\" to=\"skills\" spy={true} smooth={true} offset={50} duration={500}>\r\n            <div>\r\n              Skills\r\n            </div>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, {Component} from \"react\";\r\nimport './Fullpage.css'\r\n\r\nclass Fullpage extends Component {\r\n    \r\n    render() {\r\n        const {children} = this.props\r\n        return(\r\n            <div className={`fullpage ${this.props.className} || ''` } style={{\r\n                background: this.props.background,\r\n                color: this.props.color\r\n              }}>\r\n                {children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Fullpage\r\n","import React, { Component } from 'react';\r\nimport './DownIcon.css'\r\n\r\nclass DownIcon extends Component {\r\n    render() {\r\n        return (\r\n            <div onClick={this.props.onClick} className=\"downArrow downLink\"\r\n                style={{\r\n                    color: this.props.color\r\n                }}>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DownIcon","import React, { Component } from \"react\";\r\n\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport DownIcon from \"../components/DownIcon\";\r\n\r\n\r\nimport data from \"../data.json\";\r\nimport \"./TitleSection.css\";\r\n\r\nimport { Link, Element } from 'react-scroll';\r\nimport { SocialIcon } from \"react-social-icons\";\r\n\r\nclass TitleSection extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Element name=\"title\" className=\"element\">\r\n        </Element>\r\n        <Fullpage className=\"first\" background={this.props.background} color={this.props.color}>\r\n          <div><img className=\"profile\" src={data.icons[2].img} alt=\"\" />\r\n          </div>\r\n          <h1>{data.title}</h1>\r\n          <div>\r\n            <h3>{data.subtitle}</h3>\r\n          </div>\r\n          <div className=\"icons-wrapper\">\r\n            {Object.keys(data.links).map(key => {\r\n              return (\r\n                <div className=\"icon\">\r\n                  <SocialIcon url={data.links[key]} target=\"_blank\" bgColor={this.props.color} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <Link activeClass=\"active\" to=\"about\" spy={true} smooth={true} offset={50} duration={500}>\r\n            <DownIcon color={this.props.color} />\r\n          </Link>\r\n        </Fullpage>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TitleSection;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport DownIcon from \"../components/DownIcon\";\r\n\r\nimport data from \"../data.json\";\r\n\r\nimport './AboutSection.css';\r\n\r\nimport { Link, Element } from 'react-scroll';\r\n\r\nclass AboutSection extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Element name=\"about\" className=\"element\">\r\n        </Element>\r\n        <Fullpage className=\"second\" background={this.props.background} color={this.props.color}>\r\n          <h1>{data.sections[0].title}</h1>\r\n          <div>\r\n            {data.sections[0].items.map(p => {\r\n              return <p>{p.content}</p>;\r\n            })}\r\n          </div>\r\n          <Link activeClass=\"active\" to=\"skills\" spy={true} smooth={true} offset={50} duration={500}>\r\n            <DownIcon onClick={() => console.log(\"I am here\")} />\r\n          </Link>\r\n        </Fullpage>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutSection;\r\n","import React, { Component } from \"react\";\r\nimport './SkillCard.css'\r\n\r\nclass SkillCard extends Component {\r\n  render() {\r\n    const { skill } = this.props\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"image-wrapper\">\r\n          <i className={skill.content.image}></i>\r\n        </div>\r\n        <div className=\"skill-title-wrapper\">{skill.content.title}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SkillCard","import React from 'react';\r\nimport data from \"../data.json\";\r\nimport './UpIcon.css'\r\n\r\nconst UpIcon = (props) => {\r\n    return (\r\n        <div onClick={props.onClick} className=\"upArrow\" >\r\n            <i className={data.icons[0].img} ></i>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpIcon","import React, { Component } from \"react\";\r\n\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport SkillCards from \"../components/SkillCard\";\r\nimport UpIcon from \"../components/UpIcon\";\r\n\r\nimport data from \"../data.json\";\r\n\r\nimport './SkillSection.css';\r\n\r\nimport { Link, Element } from 'react-scroll';\r\n\r\nclass SkillSection extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Element name=\"skills\" className=\"element\">\r\n        </Element>\r\n        <Fullpage className=\"third\" background={this.props.background} color={this.props.color}>\r\n          <h1>{data.sections[1].title}</h1>\r\n          <div className=\"cards-wrapper\">\r\n            {data.sections[1].items.map(eachSkill => {\r\n              return (\r\n                <SkillCards skill={eachSkill} />\r\n              );\r\n            })}\r\n          </div>\r\n          <Link activeClass=\"active\" to=\"title\" spy={true} smooth={true} offset={50} duration={500}>\r\n            <UpIcon />\r\n          </Link>\r\n        </Fullpage>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SkillSection;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Navbar from \"./Navbar\";\r\nimport TitleSection from \"../sections/TitleSection\";\r\nimport AboutSection from \"../sections/AboutSection\";\r\nimport SkillSection from \"../sections/SkillSection\";\r\n\r\nimport SnowStorm from 'react-snowstorm';\r\n\r\nclass ChangeColor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      color: this.props.color,\r\n      background: this.props.background\r\n    };\r\n  }\r\n\r\n  chColor = () => {\r\n    const colors = [\"red\", \"green\", \"blue\", \"orange\", \"gray\"];\r\n    this.setState({\r\n      color: `${colors[Math.floor(Math.random() * colors.length)]}`,\r\n      background: `#DCEDC8`\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { children } = this.props\r\n    return (\r\n      <div>\r\n        {children}\r\n        <Navbar changeColor={this.chColor} color={this.state.color} />\r\n        <SnowStorm animationInterval=\"50\" snowCharacter=\"*\" vMaxY={2} vMaxX={2} />\r\n        <TitleSection color={this.state.color} background={this.state.background} />\r\n        <AboutSection color={this.state.color} background={this.state.background} />\r\n        <SkillSection color={this.state.color} background={this.state.background} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ChangeColor\r\n","import React from 'react';\nimport './App.css';\n\nimport ChangeColor from './components/ChangeColor';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ChangeColor />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}